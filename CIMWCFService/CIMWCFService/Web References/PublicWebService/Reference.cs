//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace CIMWCFService.PublicWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ExcuteSQL_QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteSQL_BatchOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendMailOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBossList_ByEmployeeNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBossList_ByOrgIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback FormatChineseNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetE_Expenses_ContactListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UACReplaceVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckFlowerEmployeeAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMSSQLStoredProcedureParaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteStoredProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExcuteBCSStoredProcedureOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlowerHeaderInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSystemOwnerInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback LDAPVerificationOperationCompleted;
        
        private System.Threading.SendOrPostCallback LDAPVerificationQAOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSplitCharOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::CIMWCFService.Properties.Settings.Default.CIMWCFService_PublicWebService_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ExcuteSQL_QueryCompletedEventHandler ExcuteSQL_QueryCompleted;
        
        /// <remarks/>
        public event ExcuteSQL_BatchCompletedEventHandler ExcuteSQL_BatchCompleted;
        
        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;
        
        /// <remarks/>
        public event GetBossList_ByEmployeeNoCompletedEventHandler GetBossList_ByEmployeeNoCompleted;
        
        /// <remarks/>
        public event GetBossList_ByOrgIDCompletedEventHandler GetBossList_ByOrgIDCompleted;
        
        /// <remarks/>
        public event FormatChineseNumberCompletedEventHandler FormatChineseNumberCompleted;
        
        /// <remarks/>
        public event GetE_Expenses_ContactListCompletedEventHandler GetE_Expenses_ContactListCompleted;
        
        /// <remarks/>
        public event UACReplaceVerificationCompletedEventHandler UACReplaceVerificationCompleted;
        
        /// <remarks/>
        public event CheckFlowerEmployeeAccountCompletedEventHandler CheckFlowerEmployeeAccountCompleted;
        
        /// <remarks/>
        public event GetMSSQLStoredProcedureParaCompletedEventHandler GetMSSQLStoredProcedureParaCompleted;
        
        /// <remarks/>
        public event ExcuteStoredProcedureCompletedEventHandler ExcuteStoredProcedureCompleted;
        
        /// <remarks/>
        public event ExcuteBCSStoredProcedureCompletedEventHandler ExcuteBCSStoredProcedureCompleted;
        
        /// <remarks/>
        public event GetFlowerHeaderInfoCompletedEventHandler GetFlowerHeaderInfoCompleted;
        
        /// <remarks/>
        public event GetSystemOwnerInfoCompletedEventHandler GetSystemOwnerInfoCompleted;
        
        /// <remarks/>
        public event LDAPVerificationCompletedEventHandler LDAPVerificationCompleted;
        
        /// <remarks/>
        public event LDAPVerificationQACompletedEventHandler LDAPVerificationQACompleted;
        
        /// <remarks/>
        public event AddSplitCharCompletedEventHandler AddSplitCharCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteSQL_Query", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet ExcuteSQL_Query(string sDBName, string sSql, string sFromSYS) {
            object[] results = this.Invoke("ExcuteSQL_Query", new object[] {
                        sDBName,
                        sSql,
                        sFromSYS});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteSQL_QueryAsync(string sDBName, string sSql, string sFromSYS) {
            this.ExcuteSQL_QueryAsync(sDBName, sSql, sFromSYS, null);
        }
        
        /// <remarks/>
        public void ExcuteSQL_QueryAsync(string sDBName, string sSql, string sFromSYS, object userState) {
            if ((this.ExcuteSQL_QueryOperationCompleted == null)) {
                this.ExcuteSQL_QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteSQL_QueryOperationCompleted);
            }
            this.InvokeAsync("ExcuteSQL_Query", new object[] {
                        sDBName,
                        sSql,
                        sFromSYS}, this.ExcuteSQL_QueryOperationCompleted, userState);
        }
        
        private void OnExcuteSQL_QueryOperationCompleted(object arg) {
            if ((this.ExcuteSQL_QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteSQL_QueryCompleted(this, new ExcuteSQL_QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteSQL_Batch", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ExcuteSQL_Batch(string sDBName, string[] sSql, string sFromSYS) {
            object[] results = this.Invoke("ExcuteSQL_Batch", new object[] {
                        sDBName,
                        sSql,
                        sFromSYS});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteSQL_BatchAsync(string sDBName, string[] sSql, string sFromSYS) {
            this.ExcuteSQL_BatchAsync(sDBName, sSql, sFromSYS, null);
        }
        
        /// <remarks/>
        public void ExcuteSQL_BatchAsync(string sDBName, string[] sSql, string sFromSYS, object userState) {
            if ((this.ExcuteSQL_BatchOperationCompleted == null)) {
                this.ExcuteSQL_BatchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteSQL_BatchOperationCompleted);
            }
            this.InvokeAsync("ExcuteSQL_Batch", new object[] {
                        sDBName,
                        sSql,
                        sFromSYS}, this.ExcuteSQL_BatchOperationCompleted, userState);
        }
        
        private void OnExcuteSQL_BatchOperationCompleted(object arg) {
            if ((this.ExcuteSQL_BatchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteSQL_BatchCompleted(this, new ExcuteSQL_BatchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendMail(string strTo, string strCC, string strBCC, string strSubject, string strBody) {
            this.Invoke("SendMail", new object[] {
                        strTo,
                        strCC,
                        strBCC,
                        strSubject,
                        strBody});
        }
        
        /// <remarks/>
        public void SendMailAsync(string strTo, string strCC, string strBCC, string strSubject, string strBody) {
            this.SendMailAsync(strTo, strCC, strBCC, strSubject, strBody, null);
        }
        
        /// <remarks/>
        public void SendMailAsync(string strTo, string strCC, string strBCC, string strSubject, string strBody, object userState) {
            if ((this.SendMailOperationCompleted == null)) {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                        strTo,
                        strCC,
                        strBCC,
                        strSubject,
                        strBody}, this.SendMailOperationCompleted, userState);
        }
        
        private void OnSendMailOperationCompleted(object arg) {
            if ((this.SendMailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBossList_ByEmployeeNo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBossList_ByEmployeeNo(string EmployeeNo) {
            object[] results = this.Invoke("GetBossList_ByEmployeeNo", new object[] {
                        EmployeeNo});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBossList_ByEmployeeNoAsync(string EmployeeNo) {
            this.GetBossList_ByEmployeeNoAsync(EmployeeNo, null);
        }
        
        /// <remarks/>
        public void GetBossList_ByEmployeeNoAsync(string EmployeeNo, object userState) {
            if ((this.GetBossList_ByEmployeeNoOperationCompleted == null)) {
                this.GetBossList_ByEmployeeNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBossList_ByEmployeeNoOperationCompleted);
            }
            this.InvokeAsync("GetBossList_ByEmployeeNo", new object[] {
                        EmployeeNo}, this.GetBossList_ByEmployeeNoOperationCompleted, userState);
        }
        
        private void OnGetBossList_ByEmployeeNoOperationCompleted(object arg) {
            if ((this.GetBossList_ByEmployeeNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBossList_ByEmployeeNoCompleted(this, new GetBossList_ByEmployeeNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetBossList_ByOrgID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBossList_ByOrgID(string sDept, string sBossLevel) {
            object[] results = this.Invoke("GetBossList_ByOrgID", new object[] {
                        sDept,
                        sBossLevel});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBossList_ByOrgIDAsync(string sDept, string sBossLevel) {
            this.GetBossList_ByOrgIDAsync(sDept, sBossLevel, null);
        }
        
        /// <remarks/>
        public void GetBossList_ByOrgIDAsync(string sDept, string sBossLevel, object userState) {
            if ((this.GetBossList_ByOrgIDOperationCompleted == null)) {
                this.GetBossList_ByOrgIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBossList_ByOrgIDOperationCompleted);
            }
            this.InvokeAsync("GetBossList_ByOrgID", new object[] {
                        sDept,
                        sBossLevel}, this.GetBossList_ByOrgIDOperationCompleted, userState);
        }
        
        private void OnGetBossList_ByOrgIDOperationCompleted(object arg) {
            if ((this.GetBossList_ByOrgIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBossList_ByOrgIDCompleted(this, new GetBossList_ByOrgIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FormatChineseNumber", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string FormatChineseNumber(string sInputValue, bool moneyChar) {
            object[] results = this.Invoke("FormatChineseNumber", new object[] {
                        sInputValue,
                        moneyChar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FormatChineseNumberAsync(string sInputValue, bool moneyChar) {
            this.FormatChineseNumberAsync(sInputValue, moneyChar, null);
        }
        
        /// <remarks/>
        public void FormatChineseNumberAsync(string sInputValue, bool moneyChar, object userState) {
            if ((this.FormatChineseNumberOperationCompleted == null)) {
                this.FormatChineseNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFormatChineseNumberOperationCompleted);
            }
            this.InvokeAsync("FormatChineseNumber", new object[] {
                        sInputValue,
                        moneyChar}, this.FormatChineseNumberOperationCompleted, userState);
        }
        
        private void OnFormatChineseNumberOperationCompleted(object arg) {
            if ((this.FormatChineseNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FormatChineseNumberCompleted(this, new FormatChineseNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetE_Expenses_ContactList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetE_Expenses_ContactList(string sLoginEmployeeNo, string doc_type) {
            object[] results = this.Invoke("GetE_Expenses_ContactList", new object[] {
                        sLoginEmployeeNo,
                        doc_type});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetE_Expenses_ContactListAsync(string sLoginEmployeeNo, string doc_type) {
            this.GetE_Expenses_ContactListAsync(sLoginEmployeeNo, doc_type, null);
        }
        
        /// <remarks/>
        public void GetE_Expenses_ContactListAsync(string sLoginEmployeeNo, string doc_type, object userState) {
            if ((this.GetE_Expenses_ContactListOperationCompleted == null)) {
                this.GetE_Expenses_ContactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetE_Expenses_ContactListOperationCompleted);
            }
            this.InvokeAsync("GetE_Expenses_ContactList", new object[] {
                        sLoginEmployeeNo,
                        doc_type}, this.GetE_Expenses_ContactListOperationCompleted, userState);
        }
        
        private void OnGetE_Expenses_ContactListOperationCompleted(object arg) {
            if ((this.GetE_Expenses_ContactListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetE_Expenses_ContactListCompleted(this, new GetE_Expenses_ContactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UACReplaceVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet UACReplaceVerification(string sLoginEmployee, string AdminAccountPassword) {
            object[] results = this.Invoke("UACReplaceVerification", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void UACReplaceVerificationAsync(string sLoginEmployee, string AdminAccountPassword) {
            this.UACReplaceVerificationAsync(sLoginEmployee, AdminAccountPassword, null);
        }
        
        /// <remarks/>
        public void UACReplaceVerificationAsync(string sLoginEmployee, string AdminAccountPassword, object userState) {
            if ((this.UACReplaceVerificationOperationCompleted == null)) {
                this.UACReplaceVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUACReplaceVerificationOperationCompleted);
            }
            this.InvokeAsync("UACReplaceVerification", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword}, this.UACReplaceVerificationOperationCompleted, userState);
        }
        
        private void OnUACReplaceVerificationOperationCompleted(object arg) {
            if ((this.UACReplaceVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UACReplaceVerificationCompleted(this, new UACReplaceVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckFlowerEmployeeAccount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckFlowerEmployeeAccount(string sEmp_No) {
            object[] results = this.Invoke("CheckFlowerEmployeeAccount", new object[] {
                        sEmp_No});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckFlowerEmployeeAccountAsync(string sEmp_No) {
            this.CheckFlowerEmployeeAccountAsync(sEmp_No, null);
        }
        
        /// <remarks/>
        public void CheckFlowerEmployeeAccountAsync(string sEmp_No, object userState) {
            if ((this.CheckFlowerEmployeeAccountOperationCompleted == null)) {
                this.CheckFlowerEmployeeAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckFlowerEmployeeAccountOperationCompleted);
            }
            this.InvokeAsync("CheckFlowerEmployeeAccount", new object[] {
                        sEmp_No}, this.CheckFlowerEmployeeAccountOperationCompleted, userState);
        }
        
        private void OnCheckFlowerEmployeeAccountOperationCompleted(object arg) {
            if ((this.CheckFlowerEmployeeAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckFlowerEmployeeAccountCompleted(this, new CheckFlowerEmployeeAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMSSQLStoredProcedurePara", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetMSSQLStoredProcedurePara(string sDBName, string sProcedureName) {
            object[] results = this.Invoke("GetMSSQLStoredProcedurePara", new object[] {
                        sDBName,
                        sProcedureName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetMSSQLStoredProcedureParaAsync(string sDBName, string sProcedureName) {
            this.GetMSSQLStoredProcedureParaAsync(sDBName, sProcedureName, null);
        }
        
        /// <remarks/>
        public void GetMSSQLStoredProcedureParaAsync(string sDBName, string sProcedureName, object userState) {
            if ((this.GetMSSQLStoredProcedureParaOperationCompleted == null)) {
                this.GetMSSQLStoredProcedureParaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMSSQLStoredProcedureParaOperationCompleted);
            }
            this.InvokeAsync("GetMSSQLStoredProcedurePara", new object[] {
                        sDBName,
                        sProcedureName}, this.GetMSSQLStoredProcedureParaOperationCompleted, userState);
        }
        
        private void OnGetMSSQLStoredProcedureParaOperationCompleted(object arg) {
            if ((this.GetMSSQLStoredProcedureParaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMSSQLStoredProcedureParaCompleted(this, new GetMSSQLStoredProcedureParaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteStoredProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExcuteStoredProcedure(string sDBName, string sProcedureName, System.Data.DataSet dsPara) {
            object[] results = this.Invoke("ExcuteStoredProcedure", new object[] {
                        sDBName,
                        sProcedureName,
                        dsPara});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteStoredProcedureAsync(string sDBName, string sProcedureName, System.Data.DataSet dsPara) {
            this.ExcuteStoredProcedureAsync(sDBName, sProcedureName, dsPara, null);
        }
        
        /// <remarks/>
        public void ExcuteStoredProcedureAsync(string sDBName, string sProcedureName, System.Data.DataSet dsPara, object userState) {
            if ((this.ExcuteStoredProcedureOperationCompleted == null)) {
                this.ExcuteStoredProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteStoredProcedureOperationCompleted);
            }
            this.InvokeAsync("ExcuteStoredProcedure", new object[] {
                        sDBName,
                        sProcedureName,
                        dsPara}, this.ExcuteStoredProcedureOperationCompleted, userState);
        }
        
        private void OnExcuteStoredProcedureOperationCompleted(object arg) {
            if ((this.ExcuteStoredProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteStoredProcedureCompleted(this, new ExcuteStoredProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ExcuteBCSStoredProcedure", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExcuteBCSStoredProcedure(string sProcedureName, string sParameterValue) {
            object[] results = this.Invoke("ExcuteBCSStoredProcedure", new object[] {
                        sProcedureName,
                        sParameterValue});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExcuteBCSStoredProcedureAsync(string sProcedureName, string sParameterValue) {
            this.ExcuteBCSStoredProcedureAsync(sProcedureName, sParameterValue, null);
        }
        
        /// <remarks/>
        public void ExcuteBCSStoredProcedureAsync(string sProcedureName, string sParameterValue, object userState) {
            if ((this.ExcuteBCSStoredProcedureOperationCompleted == null)) {
                this.ExcuteBCSStoredProcedureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExcuteBCSStoredProcedureOperationCompleted);
            }
            this.InvokeAsync("ExcuteBCSStoredProcedure", new object[] {
                        sProcedureName,
                        sParameterValue}, this.ExcuteBCSStoredProcedureOperationCompleted, userState);
        }
        
        private void OnExcuteBCSStoredProcedureOperationCompleted(object arg) {
            if ((this.ExcuteBCSStoredProcedureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExcuteBCSStoredProcedureCompleted(this, new ExcuteBCSStoredProcedureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetFlowerHeaderInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetFlowerHeaderInfo(string FormKind, string Form_No, string FORM_STATUS, string APPLYER) {
            object[] results = this.Invoke("GetFlowerHeaderInfo", new object[] {
                        FormKind,
                        Form_No,
                        FORM_STATUS,
                        APPLYER});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlowerHeaderInfoAsync(string FormKind, string Form_No, string FORM_STATUS, string APPLYER) {
            this.GetFlowerHeaderInfoAsync(FormKind, Form_No, FORM_STATUS, APPLYER, null);
        }
        
        /// <remarks/>
        public void GetFlowerHeaderInfoAsync(string FormKind, string Form_No, string FORM_STATUS, string APPLYER, object userState) {
            if ((this.GetFlowerHeaderInfoOperationCompleted == null)) {
                this.GetFlowerHeaderInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlowerHeaderInfoOperationCompleted);
            }
            this.InvokeAsync("GetFlowerHeaderInfo", new object[] {
                        FormKind,
                        Form_No,
                        FORM_STATUS,
                        APPLYER}, this.GetFlowerHeaderInfoOperationCompleted, userState);
        }
        
        private void OnGetFlowerHeaderInfoOperationCompleted(object arg) {
            if ((this.GetFlowerHeaderInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlowerHeaderInfoCompleted(this, new GetFlowerHeaderInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSystemOwnerInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSystemOwnerInfo(string ProgramName, int iOwnerType) {
            object[] results = this.Invoke("GetSystemOwnerInfo", new object[] {
                        ProgramName,
                        iOwnerType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSystemOwnerInfoAsync(string ProgramName, int iOwnerType) {
            this.GetSystemOwnerInfoAsync(ProgramName, iOwnerType, null);
        }
        
        /// <remarks/>
        public void GetSystemOwnerInfoAsync(string ProgramName, int iOwnerType, object userState) {
            if ((this.GetSystemOwnerInfoOperationCompleted == null)) {
                this.GetSystemOwnerInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemOwnerInfoOperationCompleted);
            }
            this.InvokeAsync("GetSystemOwnerInfo", new object[] {
                        ProgramName,
                        iOwnerType}, this.GetSystemOwnerInfoOperationCompleted, userState);
        }
        
        private void OnGetSystemOwnerInfoOperationCompleted(object arg) {
            if ((this.GetSystemOwnerInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSystemOwnerInfoCompleted(this, new GetSystemOwnerInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LDAPVerification", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LDAPVerification(string sLoginEmployee, string AdminAccountPassword) {
            object[] results = this.Invoke("LDAPVerification", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LDAPVerificationAsync(string sLoginEmployee, string AdminAccountPassword) {
            this.LDAPVerificationAsync(sLoginEmployee, AdminAccountPassword, null);
        }
        
        /// <remarks/>
        public void LDAPVerificationAsync(string sLoginEmployee, string AdminAccountPassword, object userState) {
            if ((this.LDAPVerificationOperationCompleted == null)) {
                this.LDAPVerificationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLDAPVerificationOperationCompleted);
            }
            this.InvokeAsync("LDAPVerification", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword}, this.LDAPVerificationOperationCompleted, userState);
        }
        
        private void OnLDAPVerificationOperationCompleted(object arg) {
            if ((this.LDAPVerificationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LDAPVerificationCompleted(this, new LDAPVerificationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LDAPVerificationQA", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet LDAPVerificationQA(string sLoginEmployee, string AdminAccountPassword, string sEnvironment) {
            object[] results = this.Invoke("LDAPVerificationQA", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword,
                        sEnvironment});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void LDAPVerificationQAAsync(string sLoginEmployee, string AdminAccountPassword, string sEnvironment) {
            this.LDAPVerificationQAAsync(sLoginEmployee, AdminAccountPassword, sEnvironment, null);
        }
        
        /// <remarks/>
        public void LDAPVerificationQAAsync(string sLoginEmployee, string AdminAccountPassword, string sEnvironment, object userState) {
            if ((this.LDAPVerificationQAOperationCompleted == null)) {
                this.LDAPVerificationQAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLDAPVerificationQAOperationCompleted);
            }
            this.InvokeAsync("LDAPVerificationQA", new object[] {
                        sLoginEmployee,
                        AdminAccountPassword,
                        sEnvironment}, this.LDAPVerificationQAOperationCompleted, userState);
        }
        
        private void OnLDAPVerificationQAOperationCompleted(object arg) {
            if ((this.LDAPVerificationQACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LDAPVerificationQACompleted(this, new LDAPVerificationQACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSplitChar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddSplitChar(string strOri, string strSplitChar) {
            object[] results = this.Invoke("AddSplitChar", new object[] {
                        strOri,
                        strSplitChar});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddSplitCharAsync(string strOri, string strSplitChar) {
            this.AddSplitCharAsync(strOri, strSplitChar, null);
        }
        
        /// <remarks/>
        public void AddSplitCharAsync(string strOri, string strSplitChar, object userState) {
            if ((this.AddSplitCharOperationCompleted == null)) {
                this.AddSplitCharOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSplitCharOperationCompleted);
            }
            this.InvokeAsync("AddSplitChar", new object[] {
                        strOri,
                        strSplitChar}, this.AddSplitCharOperationCompleted, userState);
        }
        
        private void OnAddSplitCharOperationCompleted(object arg) {
            if ((this.AddSplitCharCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSplitCharCompleted(this, new AddSplitCharCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExcuteSQL_QueryCompletedEventHandler(object sender, ExcuteSQL_QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteSQL_QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteSQL_QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExcuteSQL_BatchCompletedEventHandler(object sender, ExcuteSQL_BatchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteSQL_BatchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteSQL_BatchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendMailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBossList_ByEmployeeNoCompletedEventHandler(object sender, GetBossList_ByEmployeeNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBossList_ByEmployeeNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBossList_ByEmployeeNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetBossList_ByOrgIDCompletedEventHandler(object sender, GetBossList_ByOrgIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBossList_ByOrgIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBossList_ByOrgIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void FormatChineseNumberCompletedEventHandler(object sender, FormatChineseNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FormatChineseNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FormatChineseNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetE_Expenses_ContactListCompletedEventHandler(object sender, GetE_Expenses_ContactListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetE_Expenses_ContactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetE_Expenses_ContactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UACReplaceVerificationCompletedEventHandler(object sender, UACReplaceVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UACReplaceVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UACReplaceVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckFlowerEmployeeAccountCompletedEventHandler(object sender, CheckFlowerEmployeeAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckFlowerEmployeeAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckFlowerEmployeeAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetMSSQLStoredProcedureParaCompletedEventHandler(object sender, GetMSSQLStoredProcedureParaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMSSQLStoredProcedureParaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMSSQLStoredProcedureParaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExcuteStoredProcedureCompletedEventHandler(object sender, ExcuteStoredProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteStoredProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteStoredProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExcuteBCSStoredProcedureCompletedEventHandler(object sender, ExcuteBCSStoredProcedureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExcuteBCSStoredProcedureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExcuteBCSStoredProcedureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFlowerHeaderInfoCompletedEventHandler(object sender, GetFlowerHeaderInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlowerHeaderInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlowerHeaderInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSystemOwnerInfoCompletedEventHandler(object sender, GetSystemOwnerInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSystemOwnerInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSystemOwnerInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LDAPVerificationCompletedEventHandler(object sender, LDAPVerificationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LDAPVerificationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LDAPVerificationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LDAPVerificationQACompletedEventHandler(object sender, LDAPVerificationQACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LDAPVerificationQACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LDAPVerificationQACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddSplitCharCompletedEventHandler(object sender, AddSplitCharCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSplitCharCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSplitCharCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591